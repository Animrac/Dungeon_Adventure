/*
 * Centaur.java
 *
 * TCSS 143 - Spring 2021
 * Assignment 5
 */

/**
 * This program creates a Centaur character, a hero.
 * 
 * Code from class.
 * 
 * @author Anastasia Vilenius
 * @version 04/27/21
 */
public class Centaur extends Hero {
	
	/**
	 * Indicates minimum of damage that can be generated from a special attack.
	 */
	private int myMinSpecialDamage;
	
	/**
	 * Indicates maximum of damage that can be generated from a special attack.
	 */
	private int myMaxSpecialDamage;
	
	/**
	 * Constructor that initializes fields.
	 * 
	 * @param theName
	 */
	public Centaur(final String theName) {
		super(theName, 150, 40, 60, .7, 2, .2, .2);
		setMinSpecialDamage(75);
		setMaxSpecialDamage(175);
	}
	
	/**
	 * Checks to make sure maximum amount of damage generated by special attack is above 0.
	 * @param theMaxSpecialDamage
	 */
	private void setMaxSpecialDamage(final int theMaxSpecialDamage) {
		if (theMaxSpecialDamage <= 0) {
			throw new IllegalArgumentException("special skill max damage must be greater than 0");
		}
		myMaxSpecialDamage = theMaxSpecialDamage;
	}
	
	/**
	 * Checks to make sure minimum amount of damage generated by special attack is above 0.
	 * @param theMinSpecialDamage
	 */
	private void setMinSpecialDamage(final int theMinSpecialDamage) {
		if (theMinSpecialDamage <= 0) {
			throw new IllegalArgumentException("special skill min damage must be greater than 0");
		}
		myMinSpecialDamage = theMinSpecialDamage;
	}	
	
	/**
	 * Overrides specialAttack method in DungeonCharacter class by allowing Centaur a chance
	 * to use a crushing blow special attack.
	 * 
	 * @param theOpponent
	 */
	@Override
	protected void specialAttack(final DungeonCharacter theOpponent) {
		System.out.print(getName() + " tries to use Crushing Blow");
		if(canUseSpecialSkill()) {
			int damage = generateSpecialDamage();
			
			System.out.println(" and hits for **" + damage + "** damage!!");
        }
		else {
			System.out.println(" but it fails :-(");
		}
	}
	
	/**
	 * Generates range of values of special attack damage.
	 * 
	 * @return range of values of special attack damage
	 */
	private int generateSpecialDamage() {
		return DungeonCharacter.generateRangedValue(myMinSpecialDamage, myMaxSpecialDamage);
	}
}
